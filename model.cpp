#include "model.h"

CONSOLE_APP_MAIN
{
	LOG("Hello world");
	/*
	 НАЧАЛЬНЫЕ ВХОДНЫЕ ДАННЫЕ ИЗ НАВИГАЦИОННОГО ФАЙЛА
	 ДЛЯ ТЕСТИРОВАНИЯ

	G01 2018 04 16 00 00 00-0.409865751862D-04-0.261479726760D-11 0.000000000000D+00
     0.830000000000D+02 0.579375000000D+02 0.479127100424D-08 0.136321882824D+01
     0.319071114063D-05 0.760033272672D-02 0.566244125366D-05 0.515366792870D+04
     0.864000000000D+05-0.540167093277D-07-0.199576327491D+01 0.203028321266D-06
     0.970469805449D+00 0.276437500000D+03 0.612966614851D+00-0.838856370306D-08
     0.313227332890D-09 0.100000000000D+01 0.199700000000D+04 0.000000000000D+00
     0.280000000000D+01 0.000000000000D+00 0.558793544769D-08 0.830000000000D+02
     0.863700000000D+05
	*/
		
	// формирование начальных значений
	CKeplerian kep; // Создание объекта класса
	CCartesian car;
	
	kep.e = 0.760033272672*pow(10,-2);				// ЭКСЦЕНТРИСИТЕТ
	kep.a = sqr(0.515366792870*pow(10,4));			// большая полуось = м

	kep.i = 0.970469805449*pow(10,0);				// наклонение (рад)
	kep.omBig = -0.199576327491*pow(10,1);				// долгота восходящего узла
	kep.omMin = 0.612966614851*pow(10,0);				// аргумент перицентра
	
	// вычисление средней аномалии
	double dln = 0.479127100424*pow(10,-8);
	double n0 = sqrt(398600.4415/pow(kep.a,3));
	double n = n0 + dln;;
	double tk = 0.863700000000*pow(10,5);
	double M0 = 0.136321882824*10;
	kep.M = M0 + n * tk;								// средняя аномалия
	
	// формирование Кеплеровских координат
	car = KepToDec(kep);
	
}
